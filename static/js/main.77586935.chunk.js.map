{"version":3,"sources":["Header.js","AddGroupWindow.js","AddGroupModal.js","GroupBar.js","images/delete_icon.svg","EditTaskWindow.js","images/edit_icon.svg","EditTaskModal.js","Sidebar.js","Content.js","App.js","index.js"],"names":["Header","className","id","React","Component","AddGroupWindow","props","state","name","color","handleGroupSubmit","bind","handleGroupName","handleGroupColor","event","this","setState","target","value","preventDefault","addGroup","closeBtn","modalClassName","show","htmlFor","type","onChange","onClick","AddGroupModal","showModal","hideModal","GroupBar","swapTab","groups","map","group","EditTaskWindow","content","date","handleEditTaskSubmit","handleContent","handleDate","handleGroup","options","selectedIndex","text","editTask","placeholder","disabled","selected","EditTaskModal","src","EditBtn","alt","height","Sidebar","removeTask","tasks","page","task","style","background","DeleteBtn","filter","filteredTask","Content","handleTaskSubmit","addTask","App","tabName","document","getElementsByClassName","classList","remove","nextTab","getElementById","nodeValue","add","newID","concat","console","log","index","findIndex","obj","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.77586935.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n\n    render() {\n        return (\n            <div\n            className=\"header\"\n            id=\"header\">\n                <div className=\"title-container\">\n                    <h1 className=\"title\" id=\"title\">doStuff</h1>\n                    <p className=\"subtitle\" id=\"subtitle\">get your shit together</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from \"react\";\n\nclass AddGroupWindow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\",\n            name: \"\",\n            color: \"\"\n        }\n        this.handleGroupSubmit = this.handleGroupSubmit.bind(this);\n        this.handleGroupName = this.handleGroupName.bind(this);\n        this.handleGroupColor = this.handleGroupColor.bind(this);\n    };\n    handleGroupName(event) {\n        this.setState({name: event.target.value});\n    };\n    handleGroupColor(event) {\n        this.setState({color: event.target.value});\n    };\n\n    handleGroupSubmit(event) {\n        event.preventDefault();\n        this.props.addGroup(this.state.id, this.state.name, this.state.color);\n        this.setState({id: \"\", name: \"\", color: \"\"})\n        this.props.closeBtn();\n    }\n\n    render() {\n        const modalClassName = this.props.show ? \"add-group-window display-block\" : \"add-group-window display-none\";\n\n        return (\n            <div\n            className={modalClassName}>\n                <div className=\"add-group-window-content\">\n    \n                    <div id=\"add-group-form\">\n                        <h2>form a group</h2>\n                        <div id=\"group-input-container\">\n                            <label htmlFor=\"group-input\">group: \n                                <input\n                                value={this.state.name} \n                                type=\"text\"\n                                name=\"group-input\"\n                                onChange={this.handleGroupName}/>\n                            </label>\n                        </div>\n                        <div id=\"color-input-container\">\n                            <label htmlFor=\"color-input\">color: \n                                <input \n                                value={this.state.color}\n                                type=\"color\"\n                                name=\"color-input\"\n                                onChange={this.handleGroupColor}/>\n                            </label>\n                        </div>  \n                    </div>\n    \n                    <div id=\"add-group-window-control\">\n                        <button\n                        type=\"button\"\n                        id=\"add-group-close-btn\"\n                        onClick={this.props.closeBtn}>\n                            x\n                        </button>\n    \n                        <button\n                        type=\"button\"\n                        id=\"add-group-submit-button\"\n                        onClick={this.handleGroupSubmit}>\n                            submit\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddGroupWindow;","import AddGroupWindow from './AddGroupWindow';\nimport React from 'react';\n\nclass AddGroupModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false\n        };\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n    };\n    showModal = () => {\n        this.setState({show: true});\n    };\n    hideModal = () => {\n        this.setState({show: false});\n    };\n\n    render() {\n        return(\n            <div className=\"add-group-modal-container\">\n                <div\n                className=\"add-group-button\"\n                onClick={this.showModal}>\n                    + add\n                </div>\n                <AddGroupWindow \n                show={this.state.show}\n                closeBtn={this.hideModal}\n                addGroup={this.props.addGroup}/>\n            </div>\n        )\n    }\n\n}\n\nexport default AddGroupModal;","import React from 'react';\nimport AddGroupModal from './AddGroupModal';\n\nclass GroupBar extends React.Component {\n    render() {\n        return (\n            <div\n            className=\"group-bar\"\n            id=\"group-bar\">\n                <ul>\n                    <li \n                    className=\"group-bar-tab-active\"\n                    id=\"group-bar-tab-recent\"\n                    onClick = {() => this.props.swapTab(\"recent\")}>\n                        tasks\n                        </li>\n\n                    {this.props.groups.map(group => \n\n                            <li\n                            value={group.color}\n                            className=\"group-bar-tab\"\n                            id={\"group-bar-tab-\"+group.name}\n                            key={\"group-bar-tab-\"+group.id}\n                            onClick= {() => this.props.swapTab(group.name)}>\n                                {group.name}\n                            </li>\n                        \n                        )}\n                    <li><AddGroupModal addGroup={this.props.addGroup}/></li>\n                </ul>\n            </div>\n        );\n    };\n}\n\nexport default GroupBar;","export default __webpack_public_path__ + \"static/media/delete_icon.b5b4eb1e.svg\";","import React from \"react\";\n\nclass EditTaskWindow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\",\n            content: \"\",\n            date: \"\",\n            group: \"\",\n            color: \"\"\n        }\n        this.handleEditTaskSubmit = this.handleEditTaskSubmit.bind(this);\n        this.handleContent = this.handleContent.bind(this);\n        this.handleDate = this.handleDate.bind(this);\n        this.handleGroup = this.handleGroup.bind(this);\n    };\n    handleContent(event) {\n        this.setState({content: event.target.value});\n    };\n    handleDate(event) {\n        this.setState({date: event.target.value});\n    };\n    handleGroup(event) {\n        this.setState({color: event.target.value,\n            group: event.target.options[event.target.selectedIndex].text})\n    }\n    handleEditTaskSubmit(event) {\n        event.preventDefault();\n        this.props.editTask(this.props.id, this.state.content, this.state.date, this.state.group, this.state.color);\n        this.props.closeBtn();\n    }\n\n    render() {\n        const modalClassName = this.props.show ? \"edit-task-window display-block\" : \"edit-task-window display-none\";\n\n        return (\n            <div\n            className={modalClassName}>\n                <div className=\"edit-task-window-content\">\n    \n                    <div id=\"edit-task-form\">\n                        <h2>change your mind?</h2>\n                        <div id=\"task-input-container\">\n                            <label htmlFor=\"task-input\">task:</label>\n                                <input\n                                value={this.state.name}\n                                placeholder={this.props.content} \n                                type=\"text\"\n                                name=\"task-input\"\n                                onChange={this.handleContent}>\n                                </input>\n                            \n                        </div>\n\n                        <div id=\"date-input-container\">\n                            <label htmlFor=\"date-input\">due:</label>\n                            <input \n                            value={this.state.date}\n                            type=\"date\"\n                            name=\"date-input\"\n                            onChange={this.handleDate}>\n                            </input>\n                        </div>\n\n                        <div id=\"group-input-container\">\n                            <label htmlFor=\"add-task-groups-dropdown\">group:</label>\n                            <select                         \n                            name=\"add-task-groups-dropdown\" \n                            onChange={this.handleGroup}>\n                                <option \n                                disabled\n                                selected={true}> \n                                -- select an option -- \n                                </option>\n\n                                {this.props.groups.map(group => \n                                    <option\n                                    // color is passed as value of each option\n                                    value={group.color}\n                                    key={group.id}>\n                                    {group.name}\n                                    </option>    \n                                    )}\n\n                            </select>\n                        </div>\n                        \n                    </div>\n    \n                    <div id=\"edit-task-window-control\">\n                        <button\n                        type=\"button\"\n                        id=\"edit-task-close-btn\"\n                        onClick={this.props.closeBtn}>\n                            x\n                        </button>\n    \n                        <button\n                        type=\"button\"\n                        id=\"edit-task-submit-button\"\n                        onClick={this.handleEditTaskSubmit}>\n                            submit\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EditTaskWindow;","export default __webpack_public_path__ + \"static/media/edit_icon.6a0701c5.svg\";","import EditTaskWindow from './EditTaskWindow';\nimport React from 'react';\nimport EditBtn from './images/edit_icon.svg';\n\n\nclass EditTaskModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false\n        };\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n    };\n    showModal = () => {\n        this.setState({show: true});\n    };\n    hideModal = () => {\n        this.setState({show: false});\n    };\n\n    render() {\n        return(\n            <div className=\"edit-task-modal-container\">\n                <div\n                id=\"sidebar-item-edit-btn\"\n                onClick={this.showModal}>\n                    <img \n                    src={EditBtn}\n                    alt=\"edit button\"\n                    height=\"15\"></img>  \n                </div>\n                <EditTaskWindow \n                groups={this.props.groups}\n                id={this.props.id}\n                content={this.props.content}\n                group={this.props.group}\n                color={this.props.color}\n                editTask={this.props.editTask}\n                show={this.state.show}\n                closeBtn={this.hideModal}\n                addGroup={this.props.addGroup}/>\n            </div>\n        )\n    }\n\n}\n\nexport default EditTaskModal;","import React from 'react';\nimport DeleteBtn from './images/delete_icon.svg';\nimport EditTaskModal from './EditTaskModal'\n\nconst Sidebar = ({removeTask, editTask, tasks, page, groups}) => {\n    if(page === \"recent\") {\n        return (\n            <div\n            className=\"task-sidebar\"\n            id=\"task-sidebar\">\n                <ul>\n                    {tasks.map(task => \n                        <li\n                        className=\"sidebar-item\"\n                        key={\"sidebar-item-\"+task.id}>\n                            <div\n                            id=\"sidebar-item-accent\"\n                            style={{background: task.color}}></div>\n\n                            <div id=\"sidebar-item-content-container\">\n                                <p id=\"sidebar-item-date\">{task.date}</p>\n                                <p id=\"sidebar-item-content\">{task.content}</p>\n\n                                <div id=\"sidebar-item-control\">\n                                    <p id=\"sidebar-item-group\">{task.group}</p>\n\n                                    <EditTaskModal\n                                    editTask={editTask}\n                                    id={task.id}\n                                    content={task.content}\n                                    group={task.group}\n                                    color={task.color}\n                                    groups={groups}/>\n                                    \n                                    <div\n                                    id=\"sidebar-item-remove-btn\"\n                                    onClick={() => {removeTask(task.id)}}>\n                                        <img \n                                        src={DeleteBtn}\n                                        alt=\"delete button\"\n                                        height=\"15\"></img>\n                                    </div>\n                                </div>\n                            </div>\n\n                            \n                        </li>\n                    )}                   \n                </ul>\n            </div>\n        )\n    } else {\n        return (\n            <div\n            className=\"task-sidebar\"\n            id=\"task-sidebar\">\n                <ul>\n                    \n                    {tasks.filter(task => task.group === page).map(filteredTask =>\n                        <li\n                        className=\"sidebar-item\"\n                        key={\"sidebar-item-\"+filteredTask.id}>\n                            <div\n                            id=\"sidebar-item-accent\"\n                            style={{background: filteredTask.color}}></div>\n                            \n                            <div id=\"sidebar-item-content-container\">\n                            <p id=\"sidebar-item-date\">{filteredTask.date}</p>\n                                <p id=\"sidebar-item-content\">{filteredTask.content}</p>\n\n                                <div id=\"sidebar-item-control\">\n                                    <p id=\"sidebar-item-group\">{filteredTask.group}</p>\n\n                                    <EditTaskModal\n                                    editTask={editTask}\n                                    id={filteredTask.id}\n                                    content={filteredTask.content}\n                                    group={filteredTask.group}\n                                    color={filteredTask.color}\n                                    groups={groups}/>\n                                    \n                                    <div\n                                    id=\"sidebar-item-remove-btn\"\n                                    onClick={() => {removeTask(filteredTask.id)}}>\n                                        <img \n                                        src={DeleteBtn}\n                                        alt=\"delete button\"></img>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </li>\n                        )}              \n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Sidebar;","import React from 'react';\n\nclass Content extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\",\n            content: \"\",\n            date: \"\",\n            group: \"\",\n            color: \"\"\n        }      \n        this.handleTaskSubmit = this.handleTaskSubmit.bind(this);\n        this.handleContent = this.handleContent.bind(this);\n        this.handleDate = this.handleDate.bind(this);\n        this.handleGroup = this.handleGroup.bind(this);\n    };\n    handleContent(event) {\n        this.setState({content: event.target.value});\n    };\n    handleDate(event) {\n        this.setState({date: event.target.value});\n    };\n    handleGroup(event) {\n        this.setState({color: event.target.value, \n            group: event.target.options[event.target.selectedIndex].text\n        });\n    };\n\n    handleTaskSubmit(event) {\n        event.preventDefault();\n        this.props.addTask(this.state.id, this.state.content, this.state.date, this.state.group, this.state.color);\n        this.setState({id: \"\", content: \"\", date: \"\", group: \"\", color: \"\"})\n    }\n    render() {\n        return (\n            <div className=\"content-container\">\n                <div id=\"add-task-form\">\n                    <h2>hold that thought</h2>\n\n                    <div id=\"task-input-container\">\n                        <label htmlFor=\"task-input\">task: </label>\n                        <input \n                        value={this.state.content}\n                        type=\"text\"\n                        name=\"task-input\"\n                        onChange={this.handleContent}>\n                        </input>\n                    </div>\n\n                    <div id=\"date-input-container\">\n                        <label htmlFor=\"date-input\">due: </label>\n                        <input \n                        value={this.state.date}\n                        type=\"date\"\n                        name=\"date-input\"\n                        onChange={this.handleDate}>\n                        </input>\n                    </div>\n\n                    <div id=\"group-input-container\">\n                        <label htmlFor=\"add-task-groups-dropdown\">group: </label>\n                        <select                         \n                        name=\"add-task-groups-dropdown\" \n                        onChange={this.handleGroup}>\n                            <option \n                            disabled\n                            selected={true}> \n                            -- select an option -- \n                            </option>\n\n                            {this.props.groups.map(group => \n                                <option\n                                // color is passed as value of each option\n                                value={group.color}\n                                key={group.id}>\n                                {group.name}\n                                </option>    \n                                )}\n\n                        </select>\n                    </div>            \n                    <button\n                    id=\"content-task-submit-btn\"\n                    onClick={this.handleTaskSubmit}>\n                        submit\n                    </button>\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default Content;","import React from 'react';\nimport './App.css';\nimport Header from './Header';\nimport GroupBar from './GroupBar';\nimport Sidebar from './Sidebar';\nimport Content from './Content';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 6,\n\n      page: \"recent\",\n\n      groups : [\n        {id: 4,\n        name: \"work\",\n        color: \"red\"},\n        {id: 5,\n        name: \"school\",\n        color: \"green\"},\n      ],\n\n      tasks : [\n        {id: 1,\n        content: \"pick up drycleaning\",\n        date: \"2021-07-27\",\n        group: \"work\",\n        color: \"red\"},\n        {id: 2,\n        content: \"eat a bug\",\n        date: \"2021-07-30\",\n        group: \"school\",\n        color: \"green\"},\n        {id: 3,\n        content: \"ipsum dolor sit amet\",\n        date: \"2021-07-31\",\n        group: \"work\",\n        color: \"red\"},\n      ],\n\n    };\n    this.swapTab = this.swapTab.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n    this.addGroup = this.addGroup.bind(this);\n  };\n\n  swapTab(tabName) {   \n    const prevTab = document.getElementsByClassName(\"group-bar-tab-active\")[0];\n    prevTab.classList.remove(\"group-bar-tab-active\");\n    \n    const nextTab = document.getElementById(\"group-bar-tab-\" + tabName);\n    const color = nextTab.nodeValue;\n    nextTab.classList.add(\"group-bar-tab-active\");\n    this.setState({\n      page: tabName\n    }, () => {\n      return;\n    });\n  }\n\n  addTask(id, content, date, group, color) {\n    let newID = this.state.id;\n\n    this.setState({\n      tasks: this.state.tasks.concat({\n        id: newID,\n        content: content,\n        date: date,\n        group: group,\n        color: color\n      })\n    });\n\n    newID++;\n    this.setState({ id: newID});\n  }\n\n  removeTask(id) {\n    this.setState({\n      tasks: this.state.tasks.filter(task => task.id !== id)\n    });\n  }\n\n  editTask(id, content, date, group, color) {\n    console.log(\"id: \" + id)\n    console.log(\"content: \" + content);\n    console.log(\"date: \" + date);\n    console.log(\"group: \" + group);\n    console.log(\"color: \" + color);\n\n    this.removeTask(id);\n\n    var tasks = [...this.state.tasks];\n    var index = tasks.findIndex(obj => obj.id === id);\n    tasks[index].content = content;\n    tasks[index].date = date;\n    tasks[index].group = group;\n    tasks[index].color = color;\n    this.setState({tasks});\n  }\n\n  addGroup(id, name, color) {\n    let newID = this.state.id;\n\n    this.setState({\n      groups: this.state.groups.concat({\n        id: newID,\n        name: name,\n        color: color\n      })\n    });\n\n    newID++;\n    this.setState({ id: newID});\n    console.log(this.state.groups);\n  }\n  \n  render() {\n    return (\n      <>\n        <Header/>\n        <GroupBar \n        swapTab={this.swapTab}\n        addGroup={this.addGroup}\n        groups={this.state.groups}/>\n        <Sidebar \n        removeTask={this.removeTask}\n        editTask={this.editTask}\n        tasks={this.state.tasks}\n        groups={this.state.groups}\n        page={this.state.page}/>\n        <Content \n        addTask={this.addTask}\n        groups={this.state.groups}/>\n      </>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}